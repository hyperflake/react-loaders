{"version":3,"file":"CircularProgress.js","sources":["../../../lib/components/CircularProgress/CircularProgress.tsx"],"sourcesContent":["import { VariantProps, cva } from 'class-variance-authority';\nimport { ComponentPropsWithoutRef, FC, useMemo } from 'react';\n\nconst progressVariants = cva(['hf-circular-progressbar'], {\n    variants: {\n        variant: {\n            indeterminate: ['hf-circular-progressbar-indeterminate'],\n            determinate: ['hf-circular-progressbar-determinate'],\n        },\n        color: {\n            inherit: ['hf-progressbar-inherit'],\n            primary: ['hf-progressbar-primary'],\n            secondary: ['hf-progressbar-secondary'],\n            success: ['hf-progressbar-success'],\n            danger: ['hf-progressbar-danger'],\n            warning: ['hf-progressbar-warning'],\n        },\n    },\n    defaultVariants: {\n        variant: 'indeterminate',\n        color: 'primary',\n    },\n});\n\nconst CIRCUMFERENCE = 2 * Math.PI * 20.2;\n\nexport interface CircularProgressProps\n    extends Omit<ComponentPropsWithoutRef<'span'>, 'color'>,\n        VariantProps<typeof progressVariants> {\n    size?: number;\n    value?: number;\n    showLabel?: boolean;\n}\n\nconst CircularProgress: FC<CircularProgressProps> = (props) => {\n    const { size = 40, value = 0, showLabel = false, variant = 'indeterminate', color, className, ...rest } = props;\n\n    const offset = useMemo(() => {\n        let _value = Math.max(0, value);\n        _value = Math.min(_value, 100);\n\n        return CIRCUMFERENCE - (CIRCUMFERENCE * _value) / 100;\n    }, [value]);\n\n    const fontSize = useMemo(() => Math.min(size / 4), [size]);\n\n    return (\n        <span role=\"progressbar\" {...rest} className={progressVariants({ variant, color, className })}>\n            <svg viewBox=\"22 22 44 44\" width={size} height={size}>\n                <circle\n                    strokeOpacity={0.2}\n                    cx={44}\n                    cy={44}\n                    r={20}\n                    fill=\"none\"\n                    strokeWidth={4}\n                    stroke=\"currentColor\"\n                    strokeDasharray={CIRCUMFERENCE}\n                />\n                <circle\n                    className=\"hf-circular-progressbar-circle\"\n                    cx={44}\n                    cy={44}\n                    r={20}\n                    fill=\"none\"\n                    strokeWidth={4}\n                    stroke=\"currentColor\"\n                    strokeDasharray={CIRCUMFERENCE}\n                    strokeDashoffset={offset}\n                    strokeLinecap=\"round\"\n                />\n            </svg>\n\n            {showLabel && variant === 'determinate' && (\n                <span className=\"hf-circular-progressbar-label\" style={{ fontSize }}>\n                    {value}%\n                </span>\n            )}\n        </span>\n    );\n};\n\nexport default CircularProgress;\n"],"names":[],"mappings":";;;AAGA,MAAM,mBAAmB,IAAI,CAAC,yBAAyB,GAAG;AAAA,EACtD,UAAU;AAAA,IACN,SAAS;AAAA,MACL,eAAe,CAAC,uCAAuC;AAAA,MACvD,aAAa,CAAC,qCAAqC;AAAA,IACvD;AAAA,IACA,OAAO;AAAA,MACH,SAAS,CAAC,wBAAwB;AAAA,MAClC,SAAS,CAAC,wBAAwB;AAAA,MAClC,WAAW,CAAC,0BAA0B;AAAA,MACtC,SAAS,CAAC,wBAAwB;AAAA,MAClC,QAAQ,CAAC,uBAAuB;AAAA,MAChC,SAAS,CAAC,wBAAwB;AAAA,IACtC;AAAA,EACJ;AAAA,EACA,iBAAiB;AAAA,IACb,SAAS;AAAA,IACT,OAAO;AAAA,EACX;AACJ,CAAC;AAED,MAAM,gBAAgB,IAAI,KAAK,KAAK;AAU9B,MAAA,mBAA8C,CAAC,UAAU;AAC3D,QAAM,EAAE,OAAO,IAAI,QAAQ,GAAG,YAAY,OAAO,UAAU,iBAAiB,OAAO,WAAW,GAAG,SAAS;AAEpG,QAAA,SAAS,QAAQ,MAAM;AACzB,QAAI,SAAS,KAAK,IAAI,GAAG,KAAK;AACrB,aAAA,KAAK,IAAI,QAAQ,GAAG;AAEtB,WAAA,gBAAiB,gBAAgB,SAAU;AAAA,EAAA,GACnD,CAAC,KAAK,CAAC;AAEJ,QAAA,WAAW,QAAQ,MAAM,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;AAEzD,SACK,qBAAA,QAAA,EAAK,MAAK,eAAe,GAAG,MAAM,WAAW,iBAAiB,EAAE,SAAS,OAAO,UAAW,CAAA,GACxF,UAAA;AAAA,IAAA,qBAAC,SAAI,SAAQ,eAAc,OAAO,MAAM,QAAQ,MAC5C,UAAA;AAAA,MAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACG,eAAe;AAAA,UACf,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,GAAG;AAAA,UACH,MAAK;AAAA,UACL,aAAa;AAAA,UACb,QAAO;AAAA,UACP,iBAAiB;AAAA,QAAA;AAAA,MACrB;AAAA,MACA;AAAA,QAAC;AAAA,QAAA;AAAA,UACG,WAAU;AAAA,UACV,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,GAAG;AAAA,UACH,MAAK;AAAA,UACL,aAAa;AAAA,UACb,QAAO;AAAA,UACP,iBAAiB;AAAA,UACjB,kBAAkB;AAAA,UAClB,eAAc;AAAA,QAAA;AAAA,MAClB;AAAA,IAAA,GACJ;AAAA,IAEC,aAAa,YAAY,iBACrB,qBAAA,QAAA,EAAK,WAAU,iCAAgC,OAAO,EAAE,SAAA,GACpD,UAAA;AAAA,MAAA;AAAA,MAAM;AAAA,IAAA,GACX;AAAA,EAER,EAAA,CAAA;AAER;"}